=Ymod
A file-system based "ORM": Record data is stored in YAML files. Records are discovered via Solr.

==?
  - No Database -> SCM friendly > stores data in YAML files
  - Index + find data via Solr
  - Uses ActiveModel (callbacks, validations etc.)

==Example
  
  Ymod.data_path = "./data"
  Ymod::Solr.url = "http://127.0.0.1:8983/solr/lunchbox_development"
  Ymod::Solr.connection.delete_by_query("*:*")
  Ymod::Solr.connection.commit

  class Page
    include Ymod::Model
    property :title, String
    property :tags, Array
    validates_presence_of :title
    solr_mapping {{
      :tags => tags,
      :title => title
    }}
  end

  page = Page.new(:path => "index", :title => "-.-- --.-", :tags => ["cq"])

  begin
    page.save!
  rescue Ymod::RecordInvalidError
    puts $!.record.errors.inspect
  end

  # page = Page.load("pages/index")

  res = Page.find("*:*", :fq => "tags:morse")
  res.each_hit { |rec|
    puts rec.title
  }

==Disclaimer
Just playing.

==TODO
Lots, but not too much.

== Note on Patches/Pull Requests
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a future version unintentionally.
* Commit, do not mess with rakefile, version, or history
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

==Author

Matt Mitchell <mailto:goodieboy@gmail.com>

==Copyright

Copyright (c) 2011 Matt Mitchell. See LICENSE for details.